{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","register","username","body","email","password","err","account","send","authenticate","session","status","scope","get","logout","re","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAkB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAC/B,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/B,sBAAQC,QAAR,CAAiB,sBAAY;AAC1BC,gBAAUH,IAAII,IAAJ,CAASC;AADO,KAAZ,CAAjB,EAEKL,IAAII,IAAJ,CAASE,QAFd,EAEwB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAC7C,UAAID,GAAJ,EAAQ;AACNN,YAAIQ,IAAJ,CAASF,GAAT;AACD;AACD,yBAASG,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKX,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,iCAArB;AACD,OALH;AAOD,KAbD;AAcH,GAfD;;AAiBA;AACAX,MAAIC,IAAJ,CAAS,QAAT,EACE,mBAASW,YAAT,CACE,OADF,EACW;AACPC,aAAS,KADF;AAEPE,WAAO;AAFA,GADX,CADF;;AAWA;AACAf,MAAIgB,GAAJ,CAAQ,SAAR,gCAAiC,UAACd,GAAD,EAAMC,GAAN,EAAa;AAC5CA,QAAIc,MAAJ;AACAC,OAAGJ,MAAH,CAAU,GAAV,EAAeH,IAAf,CAAoB,yBAApB;AACD,GAHD;;AAKA;AACAX,MAAIgB,GAAJ,CAAQ,KAAR,gCAA6B,UAACd,GAAD,EAAKC,GAAL,EAAa;AACxCA,QAAIW,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqBjB,IAAIkB,IAAzB;AACD,GAFD;;AAMA,SAAOpB,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport { generateAccessToken, respond, authenticate} from '../middleware/authMiddleware';\n\nexport default ({config, db}) => {\n  let api = Router();\n\n  // '/v1/account'\n  api.post('/register', (req,res) => {\n      Account.register(new Account({\n         username: req.body.email\n       }), req.body.password, function(err, account) {\n        if (err){\n          res.send(err);\n        }\n        passport.authenticate(\n          'local', {\n            session: false\n          })(req, res, () => {\n            res.status(200).send('Sucessfully created new account');\n          }\n        );\n      });\n  });\n\n  // '/v1/account/login'\n  api.post('/login',\n    passport.authenticate(\n      'local', {\n        session: false,\n        scope: []\n      }\n    ),\n    generateAccessToken,\n    respond\n  );\n\n  //'/v1/account/logout'\n  api.get('/logout', authenticate, (req, res) =>{\n    res.logout();\n    re.status(200).send('Successfully logged out');\n  });\n\n  // my token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVhMzE5YzQyNmRhZmEwNzVmNGVmNDQ0MSIsImlhdCI6MTUxMzIwMDg0NywiZXhwIjoxNTE1NzkyODQ3fQ.vLIzYGvSyCFEOdzJqA7MW9eXoZMX09uIB2XJphLlcgc\n  api.get('/me', authenticate, (req,res) => {\n    res.status(200).json(req.user);\n  });\n\n\n\n  return api;\n}\n"]}