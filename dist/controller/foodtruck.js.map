{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","console","log","delete","remove","_id","newReview","title","text","review","reviews","push","foodtruckQueryResult"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\nimport {authenticate} from '../middleware/authMiddleware';\nexport default ({config, db }) => {\n  let api = Router();\n  //CRUD- Create Read Update Delete\n  // '/v1/foodtruck/add' - Create\n  api.post('/add', authenticate, (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save(err =>{\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: 'FoodTruck saved Suscessfully'});\n    });\n  });\n\n  // '/v1/foodtruck' -Read\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    })\n  });\n\n  // '/v1/foodtruck/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if(err){\n        res.send(err);\n      }\n      res.json(foodtruck);\n    })\n  })\n\n  // '/v1/foodtruck/:id' -Update\n  api.put('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n        if(err){\n          res.send(err);\n        }\n        foodtruck.name = req.body.name;\n        console.log(req.body.name);\n        foodtruck.save( err => {\n          if (err){\n            res.send(err);\n          }\n          res.json({ message: 'FoodTruck info Updated!' });\n        });\n    });\n  });\n\n  //'/v1'/foodtruck/:id' - Delete\n  api.delete('/:id', (req, res) => {\n    FoodTruck.remove({\n      _id: req.params.id\n    }, (err, foodtruck) => {\n      if(err){\n        res.send(err)\n      }\n      res.json({ message:\"FoodTruck Successfully Removed\"});\n    });\n  });\n\n  // add review for a specific food truck id\n  // '/v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err,foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      console.log(Review());\n      let newReview = new Review();\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) =>{\n        if (err){\n          res.send(err)\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err =>{\n          if (err){\n            res.send(err)\n          }\n          res.json({message: 'Food truck review saved!'});\n        });\n      });\n    });\n  });\n  //get reviews for a specific food truck id\n  // '/v1/foodtruck/review/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, review) => {\n      if(err){\n        res.send(err);\n      }\n      res.json(review);\n    });\n  });\n  //get foodtrucks of a specific food type\n  // '/v1/foodtruck/foodtype/:foodtype'\n  api.get('/foodtype/:foodtype', (req, res) => {\n    // let foodtypeQueryResult = FoodTruck.find({foodtype: req.params.foodtype});\n    // console.log(\"foodtypeQueryResult\", foodtypeQueryResult);\n    FoodTruck.find({foodtype : req.params.foodtype}, {_id:1, name:1}, (err, foodtruckQueryResult) =>{\n      if (err){res.send(err)};\n      res.json(foodtruckQueryResult);\n    });\n  });\n\n  return api;\n}\n"]}